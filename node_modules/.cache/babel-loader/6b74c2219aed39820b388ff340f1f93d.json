{"ast":null,"code":"var _jsxFileName = \"/home/meina/Documents/Share-It/src/javascript/Post.js\";\nimport React, { useState, useEffect } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Button } from '@material-ui/core';\nimport '../css/Post.css';\nimport { db } from './Firebase';\nimport firebase from 'firebase';\n\nfunction Post({\n  postId,\n  user,\n  username,\n  caption,\n  imageUrl\n}) {\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState([]);\n\n  const postComment = event => {\n    event.preventDefault();\n    db.collection(\"posts\").doc(postId).collection(\"comments\").orderBy('', 'desc').add({\n      text: comment,\n      username: user.displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setComment('');\n  };\n\n  useEffect(() => {\n    let unsubscribe;\n\n    if (postId) {\n      unsubscribe = db.collection(\"posts\").doc(postId).collection(\"comments\").onSnapshot(snapshot => {\n        setComments(snapshot.docs.map(doc => doc.data()));\n      });\n    }\n\n    return () => {\n      unsubscribe();\n    };\n  }, [postId]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post__username__picture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: \"post__avatar\",\n    alt: username,\n    src: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, username)), /*#__PURE__*/React.createElement(\"img\", {\n    src: imageUrl,\n    className: \"post__image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post__username__caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"post__text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 44\n    }\n  }, username), \": \", caption), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post__comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"post__comment-input\",\n    type: \"text\",\n    placeholder: \"Add a comment...\",\n    value: comment,\n    onChange: event => setComment(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      fontSize: \"15px\",\n      color: \"#314455\"\n    },\n    className: \"post__comment-button\",\n    disabled: !comment,\n    type: \"submit\",\n    onClick: postComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, \"Post\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post__comments-all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, comments.map(comment => /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 33\n    }\n  }, comment.username), \": \", comment.text)))));\n}\n\nexport default Post;","map":{"version":3,"sources":["/home/meina/Documents/Share-It/src/javascript/Post.js"],"names":["React","useState","useEffect","Avatar","Button","db","firebase","Post","postId","user","username","caption","imageUrl","comments","setComments","comment","setComment","postComment","event","preventDefault","collection","doc","orderBy","add","text","displayName","timestamp","firestore","FieldValue","serverTimestamp","unsubscribe","onSnapshot","snapshot","docs","map","data","target","value","fontSize","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Button } from '@material-ui/core'\nimport '../css/Post.css';\nimport { db } from './Firebase';\nimport firebase from 'firebase';\n\nfunction Post({postId, user, username, caption, imageUrl}) {\n    const [comments, setComments] = useState([]);\n    const [comment, setComment] = useState([]);\n\n    const postComment = (event ) => {\n        event.preventDefault();\n\n        db.collection(\"posts\").doc(postId).collection(\"comments\").orderBy('', 'desc').add({\n            text: comment,\n            username: user.displayName,\n            timestamp:firebase.firestore.FieldValue.serverTimestamp()\n        });\n\n        setComment('');\n    }\n\n    useEffect(() => {\n        let unsubscribe;\n\n        if (postId) {\n            unsubscribe = db\n            .collection(\"posts\")\n            .doc(postId)\n            .collection(\"comments\")\n            .onSnapshot((snapshot) => {\n                setComments(snapshot.docs.map((doc) => doc.data()));\n            });\n        }\n\n        return () => {\n            unsubscribe();\n        }\n    }, [postId]);\n\n\n    return (\n        <div className=\"post\">\n            <div className=\"post__username__picture\">\n                <div className=\"post__header\">\n                    <Avatar \n                        className=\"post__avatar\"\n                        alt={username}\n                        src=\"\" \n                    />\n                    {/* Username */}\n                    <h3>{username}</h3>\n                </div>\n                {/* Image*/}\n                <img src={imageUrl} className=\"post__image\"></img>\n            </div>\n\n            <div className=\"post__username__caption\">\n                {/* Username + Caption*/}\n                <h4 className=\"post__text\"><strong>{username}</strong>: {caption}</h4>\n\n                <div className=\"post__comment\">\n                    <form>\n                        <input\n                            className=\"post__comment-input\"\n                            type=\"text\"\n                            placeholder=\"Add a comment...\"\n                            value={comment}\n                            onChange={(event) => setComment(event.target.value)}\n                        />\n                        <Button\n                            style={{\n                                fontSize: \"15px\",\n                                color: \"#314455\",\n                            }}\n                            className=\"post__comment-button\"\n                            disabled={!comment}\n                            type=\"submit\"\n                            onClick={postComment}\n                        >\n                        Post\n                    </Button>\n                    </form>\n                </div>\n                <div className=\"post__comments-all\">\n                        {comments.map((comment) => (\n                            <p>\n                                <b>{comment.username}</b>: {comment.text}\n                            </p>\n                        ))}\n                    </div>\n            </div>\n            \n\n        </div>\n    )\n}\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}