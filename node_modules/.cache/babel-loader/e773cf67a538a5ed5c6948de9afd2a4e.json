{"ast":null,"code":"var _jsxFileName = \"/home/meina/Documents/Share-It/src/javascript/Post.js\";\nimport React, { useState, useEffect } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Button } from '@material-ui/core';\nimport '../css/Post.css';\nimport { db } from './Firebase';\nimport firebase from 'firebase';\n\nfunction Post({\n  postId,\n  user,\n  username,\n  caption,\n  imageUrl\n}) {\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState([]);\n\n  const postComment = event => {\n    event.preventDefault();\n    db.collection(\"posts\").doc(postId).collection(\"comments\").add({\n      text: comment,\n      username: user.displayName,\n      // use username of user currently signed in\n      timestamp: firebase.firestore.FieldValue.serverTimestamp() // use firebase universal time\n\n    });\n    setComment(''); // set setComment back to empty\n  };\n\n  useEffect(() => {\n    let unsubscribe;\n\n    if (postId) {\n      unsubscribe = db.collection(\"posts\").doc(postId).collection(\"comments\").orderBy(\"timestamp\", \"asc\") // sort posts in ascending order based on firebase time\n      .onSnapshot(snapshot => {\n        setComments(snapshot.docs.map(doc => doc.data()));\n      });\n    }\n\n    return () => {\n      unsubscribe();\n    };\n  }, [postId]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post__username-picture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: \"post__avatar\",\n    alt: username,\n    src: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, username)), /*#__PURE__*/React.createElement(\"img\", {\n    src: imageUrl,\n    className: \"post__image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post__username-caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"post__text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 44\n    }\n  }, username), \": \", caption), user && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post__comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"post__comment-input\",\n    type: \"text\",\n    placeholder: \"Add a comment...\",\n    value: comment,\n    onChange: event => setComment(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      fontSize: \"13px\",\n      color: \"#314455\"\n    },\n    className: \"post__comment-button\",\n    disabled: !comment,\n    type: \"submit\",\n    onClick: postComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, \"Post\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post__comment-all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, comments.map(comment => /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 33\n    }\n  }, comment.username), \": \", comment.text)))));\n}\n\nexport default Post;","map":{"version":3,"sources":["/home/meina/Documents/Share-It/src/javascript/Post.js"],"names":["React","useState","useEffect","Avatar","Button","db","firebase","Post","postId","user","username","caption","imageUrl","comments","setComments","comment","setComment","postComment","event","preventDefault","collection","doc","add","text","displayName","timestamp","firestore","FieldValue","serverTimestamp","unsubscribe","orderBy","onSnapshot","snapshot","docs","map","data","target","value","fontSize","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Button } from '@material-ui/core'\nimport '../css/Post.css';\nimport { db } from './Firebase';\nimport firebase from 'firebase';\n\nfunction Post({postId, user, username, caption, imageUrl}) {\n    const [comments, setComments] = useState([]);\n    const [comment, setComment] = useState([]);\n\n    const postComment = (event ) => {\n        event.preventDefault();\n\n        db.collection(\"posts\").doc(postId).collection(\"comments\").add({\n            text: comment,\n            username: user.displayName, // use username of user currently signed in\n            timestamp:firebase.firestore.FieldValue.serverTimestamp() // use firebase universal time\n        });\n\n        setComment(''); // set setComment back to empty\n    }\n\n    useEffect(() => {\n        let unsubscribe;\n\n        if (postId) {\n            unsubscribe = db\n            .collection(\"posts\")\n            .doc(postId)\n            .collection(\"comments\")\n            .orderBy(\"timestamp\",\"asc\") // sort posts in ascending order based on firebase time\n            .onSnapshot((snapshot) => {\n                setComments(snapshot.docs.map((doc) => doc.data()));\n            });\n        }\n\n        return () => {\n            unsubscribe();\n        }\n    }, [postId]);\n\n\n    return (\n        <div className=\"post\">\n            <div className=\"post__username-picture\">\n                <div className=\"post__header\">\n                    <Avatar \n                        className=\"post__avatar\"\n                        alt={username}\n                        src=\"\" \n                    />\n                    {/* username of current user*/}\n                    <h3>{username}</h3>\n                </div>\n                {/* image */}\n                <img src={imageUrl} className=\"post__image\"></img>\n            </div>\n\n            <div className=\"post__username-caption\">\n                {/* Username and Caption*/}\n                <h4 className=\"post__text\"><strong>{username}</strong>: {caption}</h4>\n\n                {/* current user wishing to post a comment on a picture */}\n                {user && \n                <div className=\"post__comment\">\n                    <form>\n                        <input\n                            className=\"post__comment-input\"\n                            type=\"text\"\n                            placeholder=\"Add a comment...\"\n                            value={comment}\n                            onChange={(event) => setComment(event.target.value)}\n                        />\n                        <Button\n                            style={{\n                                fontSize: \"13px\",\n                                color: \"#314455\",\n                            }}\n                            className=\"post__comment-button\"\n                            disabled={!comment}\n                            type=\"submit\"\n                            onClick={postComment}\n                        >\n                        Post\n                    </Button>\n                    </form>\n                </div>\n                }\n\n                {/* display all exisitng comments */}\n                <div className=\"post__comment-all\">\n                        {comments.map((comment) => (\n                            <p>\n                                <b>{comment.username}</b>: {comment.text}\n                            </p>\n                        ))}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}