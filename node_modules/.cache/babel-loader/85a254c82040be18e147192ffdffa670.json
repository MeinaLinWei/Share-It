{"ast":null,"code":"var _jsxFileName = \"/home/meina/Documents/Share-It/src/UploadImage.js\";\nimport React, { useState, handleUpload } from 'react';\nimport { Button } from '@material-ui/core';\nimport { storage, db } from './Firebase';\n\nfunction UploadImage() {\n  const [caption, setCaption] = useState('');\n  const [url, setUrl] = useState(\"\");\n  const [progess, setProgress] = useState(0);\n  const [image, setImage] = useState(null);\n\n  const handleChange = e => {\n    // e: event, handleChange: a function\n    if (e.target.files[0]) {\n      // get the first file you have selected and \n      setImage(e.target.files[0]); // set the image in state to it.\n    }\n  };\n\n  const handleUpload = () => {\n    const uploadTask = storage.ref(`images/${image.name}`.put(image)); // access the storage in firebase and get a reference of the folder-images .name is the name of the file to uploaded and will be stored in the folder images in firebase. .put does put the image in the folder\n\n    uploadTask.on(\"state_changed\", snapshot => {\n      //progress function\n      const progress = Math.round(snapshot.bytesTransfered / snapshot.totalBytes * 100);\n      setProgress(progess);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Caption:\",\n    onChange: event => setCaption(event.target.value),\n    value: caption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Upload\"));\n}\n\nexport default UploadImage;","map":{"version":3,"sources":["/home/meina/Documents/Share-It/src/UploadImage.js"],"names":["React","useState","handleUpload","Button","storage","db","UploadImage","caption","setCaption","url","setUrl","progess","setProgress","image","setImage","handleChange","e","target","files","uploadTask","ref","name","put","on","snapshot","progress","Math","round","bytesTransfered","totalBytes","event","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,YAA1B,QAA8C,OAA9C;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,OAAT,EAAkBC,EAAlB,QAA4B,YAA5B;;AAEA,SAASC,WAAT,GAAuB;AACnB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACU,OAAD,EAAUC,WAAV,IAAyBX,QAAQ,CAAC,CAAD,CAAvC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMc,YAAY,GAAIC,CAAD,IAAO;AAAE;AAC1B,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAJ,EAAuB;AAAE;AACrBJ,MAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAR,CADmB,CACU;AAChC;AACJ,GAJD;;AAMA,QAAMhB,YAAY,GAAG,MAAM;AACvB,UAAMiB,UAAU,GAAGf,OAAO,CAACgB,GAAR,CAAa,UAASP,KAAK,CAACQ,IAAK,EAArB,CAAuBC,GAAvB,CAA2BT,KAA3B,CAAZ,CAAnB,CADuB,CAC2C;;AAClEM,IAAAA,UAAU,CAACI,EAAX,CACI,eADJ,EAEKC,QAAD,IAAc;AACV;AACA,YAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CACZH,QAAQ,CAACI,eAAT,GAA2BJ,QAAQ,CAACK,UAArC,GAAmD,GADtC,CAAjB;AAGAjB,MAAAA,WAAW,CAACD,OAAD,CAAX;AACH,KARL;AAWH,GAbD;;AAeA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,UAA/B;AAA0C,IAAA,QAAQ,EAAEmB,KAAK,IAAItB,UAAU,CAACsB,KAAK,CAACb,MAAN,CAAac,KAAd,CAAvE;AAA6F,IAAA,KAAK,EAAExB,OAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAEQ,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEb,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,CADJ;AASH;;AAED,eAAeI,WAAf","sourcesContent":["import React, { useState, handleUpload } from 'react'\nimport { Button } from '@material-ui/core';\nimport { storage, db } from './Firebase';\n\nfunction UploadImage() {\n    const [caption, setCaption] = useState('');\n    const [url, setUrl] = useState(\"\");\n    const [progess, setProgress] = useState(0);\n    const [image, setImage] = useState(null);\n\n    const handleChange = (e) => { // e: event, handleChange: a function\n        if (e.target.files[0]) { // get the first file you have selected and \n            setImage(e.target.files[0]); // set the image in state to it.\n        }\n    }\n\n    const handleUpload = () => {\n        const uploadTask = storage.ref(`images/${image.name}`.put(image)) // access the storage in firebase and get a reference of the folder-images .name is the name of the file to uploaded and will be stored in the folder images in firebase. .put does put the image in the folder\n        uploadTask.on(\n            \"state_changed\",\n            (snapshot) => {\n                //progress function\n                const progress = Math.round(\n                    (snapshot.bytesTransfered / snapshot.totalBytes) * 100\n                );\n                setProgress(progess);\n            }\n        )\n\n    }\n\n    return (\n        <div>\n            <input type=\"text\" placeholder=\"Caption:\" onChange={event => setCaption(event.target.value)} value={caption} />\n            <input type=\"file\" onChange={handleChange} />\n            <Button onClick={handleUpload}>\n                Upload\n            </Button>\n        </div>\n    )\n}\n\nexport default UploadImage\n"]},"metadata":{},"sourceType":"module"}