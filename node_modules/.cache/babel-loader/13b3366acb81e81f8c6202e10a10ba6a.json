{"ast":null,"code":"var _jsxFileName = \"/home/meina/Documents/Share-It/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Post from './Post';\nimport Logo from \"./logo5.svg\";\nimport Cat from \"./cat.jpg\";\nimport './App.css';\nimport { db, auth } from './Firebase';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport { Button, Input, handleLogin } from '@material-ui/core';\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [posts, setPosts] = useState([{\n    /*\n     username:\"Hypedinburgh\",\n     caption: \"Social distancing each letters cause why not?\",\n     imageUrl: Logo\n    },\n    {\n     username: \"Lina\", \n     caption: \"Waaaaa cute kitties\",\n     imageUrl: \"https://news.cgtn.com/news/77416a4e3145544d326b544d354d444d3355444f31457a6333566d54/img/37d598e5a04344da81c76621ba273915/37d598e5a04344da81c76621ba273915.jpg\"\n    */\n  }]);\n  const [open, setOpen] = useState(false); // default value is false\n\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    // treat this listener as the frontend listener\n    // treat everything below as the backend listener\n    const unsubscibre = auth.onAuthStateChanged(authUser => {\n      // auth.OnAuthStateChanged is a listerner and each time a change is made, it will run the folowung code.\n      if (authUser) {\n        // user is logged in.\n        console.log(authUser);\n        setUser(authUser); // it will not be affected when the website refreshes because of cookies because of auth.onAuthStateChanged\n\n        if (authUser.displayName) {// Do not update the username\n        } else {\n          // if we create a new user, firebase will store the new username\n          return authUser.updateProfile({\n            displayName: username\n          });\n        }\n      } else {\n        // user is logged out.\n        setUser(null); // if the user is logged out, set the user back to null.\n      }\n    });\n  }, [user, username]); // useEffect runs a piece of code based on a specific condition. For e.g: runs code when teh page refreshes\n\n  useEffect(() => {\n    // onSnapshot: every time a new post is added to the database, it is going to update and the code below will run.\n    db.collection('posts').onSnapshot(snapshot => {\n      // map: a function that loops through every doc, just like a for-loop\n      // data: all the properties of the document. In this case- caption, username, imageUrl\n      setPosts(snapshot.docs.map(doc => doc.data()));\n    });\n  }, []);\n\n  const signUp = event => {\n    event.preventDefault();\n    auth.createUserWithEmailAndPassword(email, password).catch(error => alert(error.message));\n  };\n\n  {\n    /* \n     [] is variable and if we leave it blank, this means that the code will run once\n     when the App component loads, and will not run again.\n      [posts] means that the App component will run one time and run again when the details of posts changes\n    */\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: () => setOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"app__signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"username\",\n    type: \"text\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"email\",\n    type: \"text\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"password\",\n    type: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    onClick: signUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, \"Submit\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"app__header__Image\",\n    src: Logo,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      fontSize: \"15px\",\n      color: \"#eae7dc\"\n    },\n    onClick: () => setOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, \"Log In\"), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      fontSize: \"15px\",\n      color: \"#eae7dc\"\n    },\n    onClick: () => setOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, \"Register\"))), posts.map(post => /*#__PURE__*/React.createElement(Post, {\n    username: post.username,\n    caption: post.caption,\n    imageUrl: post.imageUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/meina/Documents/Share-It/src/App.js"],"names":["React","useState","useEffect","Post","Cat","db","auth","makeStyles","Modal","Button","Input","handleLogin","getModalStyle","top","left","transform","useStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","App","classes","modalStyle","posts","setPosts","open","setOpen","username","setUsername","email","setEmail","password","setPassword","user","setUser","unsubscibre","onAuthStateChanged","authUser","console","log","displayName","updateProfile","collection","onSnapshot","snapshot","docs","map","doc","data","signUp","event","preventDefault","createUserWithEmailAndPassword","catch","error","alert","message","e","target","value","Logo","fontSize","color","post","caption","imageUrl"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Post from './Post';\nimport Logo from \"./logo5.svg\";\nimport Cat from \"./cat.jpg\";\nimport './App.css';\nimport { db, auth } from './Firebase';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport { Button, Input, handleLogin } from '@material-ui/core';\n\n\nfunction getModalStyle() {\n  const top = 50\n  const left = 50\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction App() {\n\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [posts, setPosts] = useState([\n    {/*\n      username:\"Hypedinburgh\",\n      caption: \"Social distancing each letters cause why not?\",\n      imageUrl: Logo\n    },\n    {\n      username: \"Lina\", \n      caption: \"Waaaaa cute kitties\",\n      imageUrl: \"https://news.cgtn.com/news/77416a4e3145544d326b544d354d444d3355444f31457a6333566d54/img/37d598e5a04344da81c76621ba273915/37d598e5a04344da81c76621ba273915.jpg\"\n    */}\n  ]);\n\n  const[open, setOpen] = useState(false); // default value is false\n  const[username, setUsername] = useState(''); \n  const[email, setEmail] = useState('');\n  const[password, setPassword] = useState('');\n  const[user, setUser] = useState(null);\n\n\n  useEffect(()=>{ // treat this listener as the frontend listener\n    // treat everything below as the backend listener\n    const unsubscibre = auth.onAuthStateChanged((authUser) => { \n      // auth.OnAuthStateChanged is a listerner and each time a change is made, it will run the folowung code.\n      if (authUser) {\n        // user is logged in.\n        console.log(authUser);\n        setUser(authUser); // it will not be affected when the website refreshes because of cookies because of auth.onAuthStateChanged\n\n        if(authUser.displayName) {\n          // Do not update the username\n        } else {\n          // if we create a new user, firebase will store the new username\n          return authUser.updateProfile ({\n            displayName: username,\n          });\n        }\n\n      } else {\n        // user is logged out.\n        setUser(null); // if the user is logged out, set the user back to null.\n      }\n    }) \n  }, [user, username]);\n\n  // useEffect runs a piece of code based on a specific condition. For e.g: runs code when teh page refreshes\n  useEffect(()=> {\n    \n    // onSnapshot: every time a new post is added to the database, it is going to update and the code below will run.\n    db.collection('posts').onSnapshot(snapshot => {\n      // map: a function that loops through every doc, just like a for-loop\n      // data: all the properties of the document. In this case- caption, username, imageUrl\n      setPosts(snapshot.docs.map(doc => doc.data())); \n    })\n\n  }, []);\n\n  const signUp = (event) => {\n    event.preventDefault();\n\n    auth.createUserWithEmailAndPassword(email,password)\n    .catch((error)=>alert(error.message))\n  };\n\n  {/* \n    [] is variable and if we leave it blank, this means that the code will run once\n    when the App component loads, and will not run again.\n\n    [posts] means that the App component will run one time and run again when the details of posts changes\n*/}\n\n  return (\n    <div className=\"app\">\n\n      <Modal\n        open={open}\n        onClose={() => setOpen(false)}\n      >\n      \n      <div style={modalStyle} className={classes.paper}>\n        <center>\n        <form className=\"app__signup\">\n          <Input\n            placeholder=\"username\"\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n\n          <Input\n            placeholder=\"email\"\n            type=\"text\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n\n          <Input\n            placeholder=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <br></br>\n          <Button type=\"submit\" onClick={signUp}>Submit</Button>\n\n        </form>\n        </center>\n      </div>\n \n      </Modal>\n\n      {/* Header */}\n      <div className=\"app__header\">\n        <img \n          className=\"app__header__Image\"\n          src={Logo}\n          alt=\"\"\n        />\n\n      <div className=\"nav\">\n        <Button \n          style={{\n            fontSize: \"15px\",\n            color: \"#eae7dc\"\n          }}\n          onClick={() => setOpen(true)}\n        >\n          Log In\n        </Button>\n        <Button \n          style={{\n            fontSize: \"15px\",\n            color: \"#eae7dc\"\n          }}\n          onClick={() => setOpen(true)}\n        >\n          Register\n        </Button>\n      </div>\n      </div>\n\n      {\n        posts.map(post => (\n          <Post username={post.username} caption={post.caption} imageUrl={post.imageUrl}/>\n        ))\n      }\n\n      {/*\n        Hypedinburgh\" caption=\"Social distancing each letters cause why not?\" imageUrl={Logo}/>\n        <Post username=\"Lina\" caption=\"Waaaaa cute kitties\" imageUrl={Cat}/>\n      */}\n\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}