{"ast":null,"code":"var _jsxFileName = \"/home/meina/Documents/Share-It/src/UploadImage.js\";\nimport React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { storage, db } from './Firebase';\nimport firebase from \"firebase\";\n\nfunction UploadImage(username) {\n  // destructuring \n  const [caption, setCaption] = useState('');\n  const [url, setUrl] = useState(\"\");\n  const [progress, setProgress] = useState(0);\n  const [image, setImage] = useState(null);\n\n  const handleChange = e => {\n    // e: event, handleChange: a function\n    if (e.target.files[0]) {\n      // get the first file you have selected and \n      setImage(e.target.files[0]); // set the image in state to it.\n    }\n  };\n\n  const handleUpload = () => {\n    const uploadTask = storage.ref(`images/${image.name}`).put(image); // access the storage in firebase and get a reference of the folder-images .name is the name of the file to uploaded and will be stored in the folder images in firebase. .put does put the image in the folder. basically uploading it to firebase storage\n\n    uploadTask.on(\"state_changed\",\n    /*\n    (snapshot) => {\n        //progress function\n        const progress = Math.round(\n            (snapshot.bytesTransfered / snapshot.totalBytes) * 100\n        );\n        setProgress(progress);\n    },\n    */\n    error => {\n      // error function\n      console.log(error);\n      alert(error.message);\n    }, () => {\n      // complete function\n      storage.ref(\"images\").child(image.name).getDownloadURL() // get the Download link of the file from firebase\n      .then(url => {\n        // post the image inside the database\n        db.collection(\"posts\").add({\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n          // regardless where you are in the world, the firebase timestamp is consistent.\n          caption: caption,\n          imageUrl: url,\n          // take the download link and put it into the firebase database.\n          username: username\n        });\n        setProgress(0);\n        setCaption(\"\");\n        setImage(null);\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Caption:\",\n    onChange: event => setCaption(event.target.value),\n    value: caption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Upload\"));\n}\n\nexport default UploadImage;","map":{"version":3,"sources":["/home/meina/Documents/Share-It/src/UploadImage.js"],"names":["React","useState","Button","storage","db","firebase","UploadImage","username","caption","setCaption","url","setUrl","progress","setProgress","image","setImage","handleChange","e","target","files","handleUpload","uploadTask","ref","name","put","on","error","console","log","alert","message","child","getDownloadURL","then","collection","add","timestamp","firestore","FieldValue","serverTimestamp","imageUrl","event","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,OAAT,EAAkBC,EAAlB,QAA4B,YAA5B;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,SAASC,WAAT,CAAqBC,QAArB,EAA+B;AAAE;AAC7B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMe,YAAY,GAAIC,CAAD,IAAO;AAAE;AAC1B,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAJ,EAAuB;AAAE;AACrBJ,MAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAR,CADmB,CACU;AAChC;AACJ,GAJD;;AAMA,QAAMC,YAAY,GAAG,MAAM;AACvB,UAAMC,UAAU,GAAGlB,OAAO,CAACmB,GAAR,CAAa,UAASR,KAAK,CAACS,IAAK,EAAjC,EAAoCC,GAApC,CAAwCV,KAAxC,CAAnB,CADuB,CAC4C;;AACnEO,IAAAA,UAAU,CAACI,EAAX,CACI,eADJ;AAEI;;;;;;;;;AASCC,IAAAA,KAAD,IAAW;AACP;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAG,MAAAA,KAAK,CAACH,KAAK,CAACI,OAAP,CAAL;AACH,KAfL,EAgBI,MAAM;AACF;AACA3B,MAAAA,OAAO,CACNmB,GADD,CACK,QADL,EAECS,KAFD,CAEOjB,KAAK,CAACS,IAFb,EAGCS,cAHD,GAGkB;AAHlB,OAICC,IAJD,CAIMvB,GAAG,IAAI;AACT;AACAN,QAAAA,EAAE,CAAC8B,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2B;AACvBC,UAAAA,SAAS,EAAC/B,QAAQ,CAACgC,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B,EADa;AACoC;AAC3D/B,UAAAA,OAAO,EAAEA,OAFc;AAGvBgC,UAAAA,QAAQ,EAAE9B,GAHa;AAGR;AACfH,UAAAA,QAAQ,EAAEA;AAJa,SAA3B;AAOAM,QAAAA,WAAW,CAAC,CAAD,CAAX;AACAJ,QAAAA,UAAU,CAAC,EAAD,CAAV;AACAM,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,OAhBD;AAiBH,KAnCL;AAsCH,GAxCD;;AA0CA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,UAA/B;AAA0C,IAAA,QAAQ,EAAE0B,KAAK,IAAIhC,UAAU,CAACgC,KAAK,CAACvB,MAAN,CAAawB,KAAd,CAAvE;AAA6F,IAAA,KAAK,EAAElC,OAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAEQ,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEI,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,CADJ;AAUH;;AAED,eAAed,WAAf","sourcesContent":["import React, { useState } from 'react'\nimport { Button } from '@material-ui/core';\nimport { storage, db } from './Firebase';\nimport firebase from \"firebase\";\n\nfunction UploadImage(username) { // destructuring \n    const [caption, setCaption] = useState('');\n    const [url, setUrl] = useState(\"\");\n    const [progress, setProgress] = useState(0);\n    const [image, setImage] = useState(null);\n\n    const handleChange = (e) => { // e: event, handleChange: a function\n        if (e.target.files[0]) { // get the first file you have selected and \n            setImage(e.target.files[0]); // set the image in state to it.\n        }\n    }\n\n    const handleUpload = () => {\n        const uploadTask = storage.ref(`images/${image.name}`).put(image); // access the storage in firebase and get a reference of the folder-images .name is the name of the file to uploaded and will be stored in the folder images in firebase. .put does put the image in the folder. basically uploading it to firebase storage\n        uploadTask.on(\n            \"state_changed\",\n            /*\n            (snapshot) => {\n                //progress function\n                const progress = Math.round(\n                    (snapshot.bytesTransfered / snapshot.totalBytes) * 100\n                );\n                setProgress(progress);\n            },\n            */\n            (error) => {\n                // error function\n                console.log(error);\n                alert(error.message);\n            },\n            () => {\n                // complete function\n                storage\n                .ref(\"images\")\n                .child(image.name)\n                .getDownloadURL() // get the Download link of the file from firebase\n                .then(url => {\n                    // post the image inside the database\n                    db.collection(\"posts\").add({\n                        timestamp:firebase.firestore.FieldValue.serverTimestamp(), // regardless where you are in the world, the firebase timestamp is consistent.\n                        caption: caption,\n                        imageUrl: url, // take the download link and put it into the firebase database.\n                        username: username\n                    });\n\n                    setProgress(0);\n                    setCaption(\"\");\n                    setImage(null);\n                })\n            }\n        )\n\n    }\n\n    return (\n        <div>\n            {/*<progress value={progress} max=\"100\" /> */}\n            <input type=\"text\" placeholder=\"Caption:\" onChange={event => setCaption(event.target.value)} value={caption} />\n            <input type=\"file\" onChange={handleChange} />\n            <Button onClick={handleUpload}>\n                Upload\n            </Button>\n        </div>\n    )\n}\n\nexport default UploadImage\n"]},"metadata":{},"sourceType":"module"}